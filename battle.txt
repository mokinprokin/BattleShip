
#include <iostream>
#include <windows.h>
#include <conio.h>

using namespace std;
int width = 4, height = 4;
bool End = false;
void starter() {
	for (int i = 0; i < 10; i++) {


		cout << "\t\t\t\t\t\t";
		if (i == 9) {
			cout << "\t";
			Sleep(1000);
			cout << "MOKA";
			Sleep(1000);
			cout << endl;
			cout << "\t\t\t\t\t\t       ";
			cout << "PRESENTS";
			cout << endl;
			break;
		}
		for (int i = 0; i < 20; i++) {
			cout << "-";
		}
		cout << endl;
	}
}

class myField {
public:
	int myRandY[100], myRandX[100];
	string myArrayS[100][100];
	int myArrayX[100], myArrayY[100];
	int myX, myY;
	bool myNotNumber = true;
	int counter = 0;
	int myShipX[100], myShipY[100];

	int count = 4;
	bool ishand = false;
	void myPlacement() {
		srand(time(NULL));
		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				myRandY[i] = 1 + rand() % height - 1;
				myRandX[j] = 1 + rand() % width - 1;
				myArrayS[myRandY[i]][myRandX[j]] = "$";

			}
		}

	}
	void shoot() {
		cout << endl;

		cin >> myY;
		cin >> myX;
		cout << endl;
		myArrayY[counter] = myY;
		myArrayX[counter] = myX;
		counter++;

	}
	void myRuchPlacement() {
		if (count >= 0) {
			cout << endl;
			cin >> myShipY[counter];
			cin >> myShipX[counter];
			myArrayS[myShipY[counter] - 1][myShipX[counter]] = "$";
			counter++;
			cout << endl;
			count--;
		}

	}
};
class pcField {
public:
	int pcRandX[100], pcRandY[100];
	string pcArrayS[100][100];
	int pcArrayX[100], pcArrayY[100];
	int pcShipCount = 0;
	bool pcNotNumber = true;
	void pcPlacement() {

		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				pcRandY[i] = 1 + rand() % height - 1;
				pcRandX[j] = 1 + rand() % width - 1;
				pcArrayS[pcRandY[i]][pcRandX[j]] = "$";


			}
		}

	}
	int pcArrayX[100], pcArrayY[100];
	int pccounter = 0;
	void pcShoot() {
		if (pccounter >= 1) {
			for (int i = 0; i < 100; i++) {
				for (int j = 0; j < 100; j++) {
					if (i != j) {
						if (pcArrayX[i] == pcArrayX[j] && pcArrayY[i] == pcArrayY[j]) {
							pcArrayX[pccounter] = 1 + rand() % width - 1;
							pcArrayY[pccounter] = 1 + rand() % height - 1;
							pccounter++;
						}
					}
				}
			}
		}
		pcArrayX[pccounter] = 1 + rand() % width - 1;
		pcArrayY[pccounter] = 1 + rand() % height - 1;
		pccounter++;

	}
};
class globalField :public myField, public pcField {
public:
	string tab = "\t";
	void Draw() {
		bool isShoot = false;
		tab = "\t\t\t";
		cout << tab;
		cout << "Ваше поле";
		tab = "\t\t\t\t     ";
		cout << tab;
		cout << "поле соперника";
		cout << endl;
		tab = "\t";
		//отрисовка моих цифр
		cout << tab << " ";
		for (int j = 0; j < width; j++) {
			cout << "  " << j + 1 << "  ";
		}
		tab = "\t";
		cout << tab << " ";
		//отрисовка pc цифр
		for (int j = 0; j < width; j++) {
			cout << "  " << j + 1 << "  ";
		}
		cout << endl;
		for (int i = 0; i < height; i++) {
			tab = "\t";
			cout << tab;
			cout << "  ";
			//отрисовка моих рядов
			for (int j = 0; j < width; j++) {
				cout << "+-+- ";
			}
			//
			cout << tab;
			cout << "  ";
			//отрисовка pc рядов
			for (int j = 0; j < width; j++) {
				cout << "+-+- ";
			}
			//
			tab = "\t";
			cout << endl;
			cout << tab;
			//отрисовка моих палок и цифр
			cout << i + 1 << " ";
			for (int j = 0; j < width; j++) {
				myNotNumber = true;
				cout << "|";
				if (!ishand) {
					for (int k = 0; k < 100; k++) {
						for (int h = 0; h < 100; h++) {
							if (pcArrayY[h] - 1 == myRandY[k] - 1 && pcArrayX[h] - 1 == myRandX[k] - 1) {
								if (i == myRandY[k] - 1 && j == myRandX[k] - 1) {
									cout << " " << "%";
									myNotNumber = false;
									break;
								}
							}
						}


						if (i == myRandY[k] - 1 && j == myRandX[k] - 1) {
							cout << " " << "$";
							myNotNumber = false;
							break;
						}
					}
				}
				
				else {
					for (int k = 0; k < 100; k++) {
						if (i == myShipY[k] - 1 && j == myShipX[k] - 1) {
							cout << " " << "$";
							myNotNumber = false;
							break;
						}
					}
				}

				if (myNotNumber == true) {
					cout << "  ";
				}
				cout << "| ";

			}
			//
			//отрисовка pc палок и цифр

			cout << tab;
			cout << i + 1 << " ";
			for (int j = 0; j < width; j++) {
				pcNotNumber = true;
				cout << "|";
				for (int k = 0; k < 100; k++) {
					if (i == pcRandY[k] - 1 && j == pcRandX[k] - 1) {

					}
					for (int h = 0; h < 100; h++) {
						if (pcRandY[h] - 1 == myArrayY[k] - 1 && pcRandX[h] - 1 == myArrayX[k] - 1) {
							if (i == pcRandY[h] - 1 && j == pcRandX[h] - 1) {
								pcShipCount -= 1;
								cout << " X";
								pcNotNumber = false;
								isShoot = true;
								break;
							}

						}

						else {
							isShoot = false;
						}

					}
					if (isShoot == false) {
						if (i == myArrayY[k] - 1 && j == myArrayX[k] - 1) {
							pcNotNumber = false;
							cout << " .";
						}
					}

				}
				if (pcNotNumber == true) {
					cout << "  ";
				}
				cout << "| ";

			}
			//
			cout << endl;
		}
		//отрисовка моя финальная
		cout << tab;
		cout << "  ";
		for (int j = 0; j < width; j++) {
			cout << "+-+- ";
		}
		//
		//отрисовка pc финальная
		cout << tab;
		cout << "  ";
		for (int j = 0; j < width; j++) {
			cout << "+-+- ";
		}
		//
	}
};
int main() {
	srand(time(NULL));
	setlocale(LC_ALL, "RUS");
	starter();
	globalField Tgl;
	Tgl.myPlacement();
	Tgl.pcPlacement();
	cin >> Tgl.ishand;
	while (!End) {
		cout << Tgl.pcShipCount;

		Tgl.Draw();
		if (Tgl.ishand) {
			if (Tgl.count > 0) {
				Tgl.myRuchPlacement();
			}
		}
		
		else {
			Tgl.count = -1;
			if (Tgl.count <= 0) {
				Tgl.shoot();
			}
		}
		Tgl.pcShoot();
		
	}

}
